name: Rust tests

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  build:
    name: Run tests on ${{ matrix.toolchain }} ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - nightly
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - wasm32-unknown-unknown
    steps:
    - uses: actions/checkout@v2
    - run: sudo apt-get update
      if: matrix.target == 'x86_64-unknown-linux-musl'
    - run: sudo apt-get install -y musl musl-dev musl-tools cmake
      if: matrix.target == 'x86_64-unknown-linux-musl'
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ matrix.toolchain }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        target: ${{ matrix.target }}
        override: true

    # If glibc, compile and test all
    - uses: actions-rs/cargo@v1
      if: matrix.target == 'x86_64-unknown-linux-gnu'
      with:
        command: build
        toolchain: ${{ matrix.toolchain }}
        args: --target ${{ matrix.target }} --workspace
    - uses: actions-rs/cargo@v1
      if: matrix.target == 'x86_64-unknown-linux-gnu'
      with:
        command: test
        toolchain: ${{ matrix.toolchain }}
        args: --target ${{ matrix.target }} --workspace

    # If musl, compile and test all
    - uses: actions-rs/cargo@v1
      if: matrix.target == 'x86_64-unknown-linux-musl'
      with:
        command: build
        toolchain: ${{ matrix.toolchain }}
        args: --target ${{ matrix.target }} --workspace
      env:
        CC: musl-gcc
        CXX: g++
    - uses: actions-rs/cargo@v1
      if: matrix.target == 'x86_64-unknown-linux-musl'
      with:
        command: test
        toolchain: ${{ matrix.toolchain }}
        args: --target ${{ matrix.target }} --workspace
      env:
        CC: musl-gcc
        CXX: g++

    # If wasm, then we test only the main module and cloudevents-sdk-reqwest
    - uses: actions-rs/cargo@v1
      if: matrix.target == 'wasm32-unknown-unknown'
      with:
        command: build
        toolchain: ${{ matrix.toolchain }}
        args: --target wasm32-unknown-unknown --package cloudevents-sdk --package cloudevents-sdk-reqwest

  build-examples:
    name: Build examples
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - wasm32-unknown-unknown
    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ matrix.toolchain }}-stable-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
          override: true

      - name: "Build reqwest-wasm-example"
        if: matrix.target == 'wasm32-unknown-unknown'
        working-directory: ${GITHUB_WORKSPACE}/example-projects/reqwest-wasm-example
        run: cargo build --target ${{ matrix.target }}

      - name: "Build rdkafka-example"
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        working-directory: ${GITHUB_WORKSPACE}/example-projects/rdkafka-example
        run: cargo build --target ${{ matrix.target }}

      - name: "Build actix-web-example"
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        working-directory: ${GITHUB_WORKSPACE}/example-projects/actix-web-example
        run: cargo build --target ${{ matrix.target }}